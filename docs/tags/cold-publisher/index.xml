<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cold Publisher on # sudo init 5 - beta</title>
    <link>https://www.sudoinit5.com/tags/cold-publisher/</link>
    <description>Recent content in Cold Publisher on # sudo init 5 - beta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 08 May 2018 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://www.sudoinit5.com/tags/cold-publisher/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Reactive WebSocket Cold Publisher</title>
      <link>https://www.sudoinit5.com/post/spring-reactive-ws-cold-server/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.sudoinit5.com/post/spring-reactive-ws-cold-server/</guid>
      <description>This Demo This demo will stand up Spring application service that exposes a WebSocket service through the Spring 5â€™s reactive WebSockets API. Typically, for inter-service comms, use a more traditional messaging system to deliver and expect events between services for example - messaging brokers such as Kafka, RabbitMq, etc.. WebSockets is an IETF standard and W3C API that provides a convenient way to issue and consume data streams across the Internet.</description>
    </item>
    
  </channel>
</rss>